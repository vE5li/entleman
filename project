core            [ tokenizer parser builder ]

dependencies    [ color format file debug ]

internal        [ color format position ]

pipeline        [ register resolve ]

project {
    name            "h0vs"
    author          "ve5li"
    contact         "ve5li@tuta.io"
}

directory {
    library         "/usr/share/seamonkey/qtc8/library/"
    core            "/usr/share/seamonkey/jts3/core/"
    pass            "/usr/share/seamonkey/jts3/passes/"
}

#function {

    process_arguments [ [ #single arguments ]

        @ create configuration and index
        #set            [ #data configuration ] [ #data { files [ ] debug !false symbols !false output "output.prg" } ]
        #length         [ #scope:arguments ]
        #set            [ #data count ] [ #last ]
        #set            [ #data index ] [ #data 1 ]

        @ iterate over all arguments and match
        #while          [ #data #not_bigger ] [ #scope:index ] [ #scope:count ]
        #index          [ #scope:arguments ] [ #scope:index ]

        @ set output file
        #if             [ #data #equals ] [ #last ] [ #data "-o" ]
        #ensure         [ #data #bigger ] [ #scope:count ] [ #scope:index ] [ #data "expected output file" ]
        #ensure         [ #data #not_present ] [ #scope ] [ #data output_set ] [ #data "output file may only be spceified once" ]
        #set            [ #data output_set ] [ #data !true ]
        #add            [ #scope:index ] [ #data 1 ]
        #set            [ #data index ] [ #last ]
        #index          [ #scope:arguments ] [ #scope:index ]
        #overwrite      [ #scope:configuration ] [ #data output ] [ #last ]
        #set            [ #data configuration ] [ #last ]

        @ enable debug
        #else           [ #data #equals ] [ #last ] [ #data "-d" ]
        #ensure         [ #data #not_present ] [ #scope ] [ #data debug_set ] [ #data "debug flag may only be set once" ]
        #set            [ #data debug_set ] [ #data !true ]
        #overwrite      [ #scope:configuration ] [ #data debug ] [ #data !true ]
        #set            [ #data configuration ] [ #last ]

        @ dump symbols
        #else           [ #data #equals ] [ #last ] [ #data "-s" ]
        #ensure         [ #data #not_present ] [ #scope ] [ #data symbols_set ] [ #data "symbols flag may only be set once" ]
        #set            [ #data symbols_set ] [ #data !true ]
        #overwrite      [ #scope:configuration ] [ #data symbols ] [ #data !true ]
        #set            [ #data configuration ] [ #last ]

        @ add source file
        #else
        #set            [ #data file ] [ #last ]
        #index          [ #scope:file ] [ #data 1 ]
        #if             [ #data #equals ] [ #last ] [ #data '-' ]
        #error          [ #data "invalid flag " ] [ #scope:file ]
        #end
        #append         [ #scope:configuration:files ] [ #scope:file ]
        #modify         [ #data #scope:configuration:files ] [ #last ]
        #end

        @ increment argument index
        #add            [ #scope:index ] [ #data 1 ]
        #set            [ #data index ] [ #last ]

        @ return configuration
        #end
        #return         [ #scope:configuration ]
    ]

    #main [ [ #list arguments ]

        @ get time prior to compiling
        #time
        #set            [ #data start_time ] [ #last ]

        @ process command line arguments
        #call           [ #function:process_arguments ] [ #scope:arguments ]
        #set            [ #data configuration ] [ #last ]

        @ load necessary libraries
        #iterate        [ #root:dependencies ]
        #string         [ #root:directory:library ] [ #last:instance ]
        #read_map       [ #last ]
        #merge          [ #root ] [ #last ]
        #modify         [ #data #root ] [ #last ]
        #end

        @ ensure that there are files to be compiled
        #ensure         [ #data #not_empty ] [ #scope:configuration:files ] [ #data "no files for compilation provided" ]

        @ debug message
        #if             [ #data #true ] [ #scope:configuration:debug ]
        #call           [ #function:print:debug ] [ #data "libraries loaded" ]
        #end

        @ load the compiler core
        #map            [ #data #pipeline ] [ #root:pipeline ]
        #set            [ #data compiler ] [ #last ]
        #iterate        [ #root:core ]
        #string         [ #root:directory:core ] [ #last:instance ]
        #read_map       [ #last ]
        #merge          [ #scope:compiler ] [ #last ]
        #set            [ #data compiler ] [ #last ]
        #end

        @ load compiler libraries
        #iterate        [ #root:internal ]
        #string         [ #root:directory:library ] [ #last:instance ]
        #read_map       [ #last ]
        #merge          [ #scope:compiler ] [ #last ]
        #set            [ #data compiler ] [ #last ]
        #end

        @ load the passes that are going to be used
        #iterate        [ #root:pipeline ]
        #string         [ #root:directory:pass ] [ #last:instance ]
        #read_map       [ #last ]
        #merge          [ #scope:compiler ] [ #last ]
        #set            [ #data compiler ] [ #last ]
        #end

        @ combine all the source files into one string
        #if             [ #data #empty ] [ #scope:configuration:files ]
        #error          [ #data "no files for compilation provided" ]
        #end
        #set            [ #data source ] [ #data "" ]
        #iterate        [ #scope:configuration:files ]
        #read_file      [ #last:instance ]
        #merge          [ #scope:source ] [ #last ]
        #set            [ #data source ] [ #last ]
        #end

        @ load the module index, compile the string and write the result to the output file
        #compile        [ #scope:compiler ] [ #scope:source ]
        #set            [ #data module ] [ #last ]
        #write_file     [ #scope:configuration:output ] [ #data "101010101010101010" ]

        @ output debug information if enabled
        #if             [ #data #true ] [ #scope:configuration:debug ]
        #call           [ #function:output_debug ] [ #scope:module ]
        #end

        @ print compilation time
        #time
        #subtract       [ #last ] [ #scope:start_time ]
        #divide         [ #last ] [ #data 1000.0 ]
        #call           [ #function:print:success ] [ #data "completed in " ] [ #last ] [ #data "s"]
    ]

    output_debug [ [ #single module ]

        @ resource information
        #call           [ #function:format:serialize ] [ #scope:module:compiler:wires ] [ #data "" ]
        #print_line     [ #data "compiler:wires " ] [ #last ]
        #call           [ #function:format:serialize ] [ #scope:module:compiler:registers ] [ #data "" ]
        #print_line     [ #data "compiler:registers " ] [ #last ]
        #call           [ #function:format:serialize ] [ #scope:module:compiler:gates ] [ #data "" ]
        #print_line     [ #data "compiler:gates " ] [ #last ]

        @ user defined information
        #call           [ #function:format:serialize ] [ #scope:module:compiler:types ] [ #data "" ]
        #print_line     [ #data "compiler:types " ] [ #last ]
        #call           [ #function:format:serialize ] [ #scope:module:compiler:directives ] [ #data "" ]
        #print_line     [ #data "compiler:directives " ] [ #last ]

        @ entire compiler
        #call           [ #function:format:level ] [ #scope:module:compiler ] [ #data 80 ]
        #print_line     [ #data "compiler " ] [ #last ]
    ]
}
